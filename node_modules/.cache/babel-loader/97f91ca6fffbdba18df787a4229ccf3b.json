{"remainingRequest":"/workspaces/firefly-calc/node_modules/babel-loader/lib/index.js!/workspaces/firefly-calc/node_modules/cache-loader/dist/cjs.js??ref--1-0!/workspaces/firefly-calc/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspaces/firefly-calc/src/views/Calculator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspaces/firefly-calc/src/views/Calculator.vue","mtime":1647274590450},{"path":"/workspaces/firefly-calc/babel.config.js","mtime":1646931915352},{"path":"/workspaces/firefly-calc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/workspaces/firefly-calc/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/workspaces/firefly-calc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/workspaces/firefly-calc/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgSGFtYnVyZ2VyTWVudSBmcm9tICdAL2NvbXBvbmVudHMvSGFtYnVyZ2VyTWVudS52dWUnOwppbXBvcnQgQ2FsY3VsYXRvck91dHB1dCBmcm9tICdAL2NvbXBvbmVudHMvQ2FsY3VsYXRvck91dHB1dC52dWUnOwppbXBvcnQgQ2FsY3VsYXRvckJ1dHRvbnMgZnJvbSAnQC9jb21wb25lbnRzL0NhbGN1bGF0b3JCdXR0b25zLnZ1ZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ2FsY3VsYXRvci1yJywKICBjb21wb25lbnRzOiB7CiAgICBIYW1idXJnZXJNZW51OiBIYW1idXJnZXJNZW51LAogICAgQ2FsY3VsYXRvck91dHB1dDogQ2FsY3VsYXRvck91dHB1dCwKICAgIENhbGN1bGF0b3JCdXR0b25zOiBDYWxjdWxhdG9yQnV0dG9ucwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRpc3BsYXlUZXh0OiAiMCIsCiAgICAgIGxhc3RDYWxjOiAiIiwKICAgICAgc2Vjb25kQ2FsYzogIiIsCiAgICAgIHRoaXJkQ2FsYzogIiIsCiAgICAgIGZvcm11bGE6ICIiLAogICAgICB0aGVtZTogInB1cnBsZSIsCiAgICAgIHB1cnBsZTogdHJ1ZSwKICAgICAgZ3JlZW46IGZhbHNlLAogICAgICBibHVlOiBmYWxzZSwKICAgICAgY29udGFpbnNPcDogZmFsc2UKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvKgogICAgICogRlVOQ1RJT046IGV2YWx1YXRlKCkKICAgICAqIFBBUkFNRVRFUlM6IG5vbmUKICAgICAqIEZVTkNUSU9OQUxJVFk6IGV2YWx1YXRlKCkgd2FzIGFscmVhZHkgd3JpdHRlbiBieSBpbnN0cnVjdG9ycy4KICAgICAqLwogICAgZXZhbHVhdGU6IGZ1bmN0aW9uIGV2YWx1YXRlKCkgewogICAgICB0cnkgewogICAgICAgIC8qIFdBUk5JTkchIE5ldmVyIHVzZSBldmFsIGluIHByb2R1Y3Rpb24gY29kZS4gKi8KICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZXZhbAogICAgICAgIHZhciByZXN1bHQgPSBldmFsKHRoaXMuZm9ybXVsYSk7CiAgICAgICAgdGhpcy5mb3JtdWxhQWxlcnQgPSBmYWxzZTsKICAgICAgICByZXN1bHQgPSAiIiArIE1hdGgucm91bmQocmVzdWx0ICogMTAwKSAvIDEwMDsKCiAgICAgICAgaWYgKHJlc3VsdCA9PT0gIk5hTiIpIHsKICAgICAgICAgIHRoaXMuY2xlYXIoKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5wdXNoKHRoaXMuZGlzcGxheVRleHQgKyAiPSAiICsgcmVzdWx0KTsKICAgICAgICAgIHRoaXMuZGlzcGxheVRleHQgPSAiIiArIHJlc3VsdDsKICAgICAgICAgIHRoaXMuZm9ybXVsYSA9ICIiICsgcmVzdWx0OwogICAgICAgICAgdGhpcy5jb250YWluc09wID0gZmFsc2U7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChleGNlcHRpb24pIHsKICAgICAgICB0aGlzLmNsZWFyKCk7CiAgICAgIH0KICAgIH0sCgogICAgLyoKICAgICAqIEZVTkNUSU9OOiBpc09wKCkKICAgICAqIFBBUkFNRVRFUlM6IHZhbHVlOiBhbnkgc3RyaW5nIHZhbHVlCiAgICAgKiBGVU5DVElPTkFMSVRZOiBjaGVja3MgdG8gc2VlIGlmIHZhbHVlIGlzICIrIiwgIi0iLCAiw5ciLCAiw7ciLCAiLyIgb3IgIioiCiAgICAgKiBJZiBzbyByZXR1cm5zIHRydWUsIGVsc2UgZmFsc2UKICAgICAqLwogICAgaXNPcDogZnVuY3Rpb24gaXNPcCh2YWx1ZSkgewogICAgICBpZiAodmFsdWUgPT09ICLDtyIgfHwgdmFsdWUgPT09ICLDlyIgfHwgdmFsdWUgPT09ICIrIiB8fCB2YWx1ZSA9PT0gIi0iIHx8IHZhbHVlID09PSAiLyIgfHwgdmFsdWUgPT09ICIqIikgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9IGVsc2UgcmV0dXJuIGZhbHNlOwogICAgfSwKCiAgICAvKgogICAgICogRlVOQ1RJT046IGZvcm11bGl6ZSgpCiAgICAgKiBQQVJBTUVURVJTOiB2YWx1ZTogIisiLCAiLSIsICLDlyIsICLDtyIgb3IgYSBudW1iZXIgc3RyaW5nCiAgICAgKiBGVU5DVElPTkFMSVRZOgogICAgICogIisiIHJldHVybnMgIisiCiAgICAgKiAiLSIgcmV0dXJucyAiLSIKICAgICAqICLDlyIgcmV0dXJucyAiKiIKICAgICAqICLDtyIgcmV0dXJucyAiLyIKICAgICAqLwogICAgZm9ybXVsaXplOiBmdW5jdGlvbiBmb3JtdWxpemUodmFsdWUpIHsKICAgICAgaWYgKHZhbHVlID09PSAiKyIpIHJldHVybiAiKyI7CiAgICAgIGlmICh2YWx1ZSA9PT0gIi0iKSByZXR1cm4gIi0iOwogICAgICBpZiAodmFsdWUgPT09ICLDlyIpIHJldHVybiAiKiI7CiAgICAgIGlmICh2YWx1ZSA9PT0gIsO3IikgcmV0dXJuICIvIjtlbHNlIHJldHVybiB2YWx1ZTsKICAgIH0sCgogICAgLyoKICAgICAqIEZVTkNUSU9OOiBhcHBlbmQoKQogICAgICogUEFSQU1FVEVSUzogdmFsdWU6IFZhbHVlIHRvIGJlIGFwcGVuZGVkIHRvIGVuZCBvZiBzdHJpbmcuCiAgICAgKiBGVU5DVElPTkFMSVRZOiBhcHBlbmQoKSBmaXJzdCBjaGVja3MgdG8gc2VlIGlmIHRoaXMuZm9ybXVsYSBoYXMgYmVlbiBzZXQuCiAgICAgKiBJZiBub3QsIHRoZW4gaXQganVzdCByZXBsYWNlcyB0aGUgdmFsdWUuIElmIGl0IGhhcyBiZWVuIHNldCwgaXQgYWRkcyB0aGUKICAgICAqIHVzZXIgaW5wdXQgc3RyaW5nICh0aGUgYnV0dG9uIHByZXNzZWQpIHRvIHRoZSBlbmQgb2YgdGhpcy5mb3JtdWxhLgogICAgICovCiAgICBhcHBlbmQ6IGZ1bmN0aW9uIGFwcGVuZCh2YWx1ZSkgewogICAgICBjb25zb2xlLmxvZygiTEVOR1RIOiAiICsgdGhpcy5kaXNwbGF5VGV4dC5sZW5ndGgpOwoKICAgICAgaWYgKHRoaXMuZGlzcGxheVRleHQubGVuZ3RoID4gNSkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuY29udGFpbnNPcCAmJiB0aGlzLmlzT3AodmFsdWUpKSB7CiAgICAgICAgLy8gSWYgdmFsdWUgaXMgb3AgYW5kIGxhc3QgY2hhciBpcyBvcCByZXBsYWNlIGxhc3QgY2hhcgogICAgICAgIHZhciBsYXN0ID0gdGhpcy5mb3JtdWxhLmNoYXJBdCh0aGlzLmZvcm11bGEubGVuZ3RoIC0gMSk7CgogICAgICAgIGlmICh0aGlzLmlzT3AobGFzdCkpIHsKICAgICAgICAgIHRoaXMuYmFja3NwYWNlKCk7CiAgICAgICAgfSAvLyBJZiBpbiBmb3JtYXQgKG51bSBvcCBudW0pIGV2YWx1YXRlIGFuZCB1cGRhdGUgZGlzcGxheQogICAgICAgIGVsc2UgewogICAgICAgICAgdmFyIHJlc3VsdCA9IGV2YWwodGhpcy5mb3JtdWxhKTsKICAgICAgICAgIHJlc3VsdCA9IE1hdGgucm91bmQocmVzdWx0ICogMTAwKSAvIDEwMDsKICAgICAgICAgIHRoaXMucHVzaCh0aGlzLmRpc3BsYXlUZXh0ICsgIj0gIiArIHJlc3VsdCk7CiAgICAgICAgICB0aGlzLmRpc3BsYXlUZXh0ID0gIiIgKyByZXN1bHQ7CiAgICAgICAgICB0aGlzLmZvcm11bGEgPSAiIiArIHJlc3VsdDsKICAgICAgICB9CiAgICAgIH0gLy9pZiB0aGVyZSdzIG5vdCBhbHJlYWR5IGFuIG9wIGFuZCB2YWx1ZSBpcyBhbiBvcCBzdGFydCBjb250YWlucyBvcCB0byB0cnVlCgoKICAgICAgaWYgKCF0aGlzLmNvbnRhaW5zT3AgJiYgdGhpcy5pc09wKHZhbHVlKSkgdGhpcy5jb250YWluc09wID0gdHJ1ZTsgLy8gaWYgaXQncyBkaXNwbGF5aW5nIDAgcmVwbGFjZSBpdCB3aXRoIGEgbnVtYmVyCgogICAgICBpZiAodGhpcy5kaXNwbGF5VGV4dCA9PT0gIjAiICYmICF0aGlzLmlzT3AodmFsdWUpKSB7CiAgICAgICAgdGhpcy5kaXNwbGF5VGV4dCA9IHZhbHVlOwogICAgICAgIHRoaXMuZm9ybXVsYSA9IHZhbHVlOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZGlzcGxheVRleHQgPSB0aGlzLmRpc3BsYXlUZXh0ICsgdmFsdWU7CiAgICAgICAgdGhpcy5mb3JtdWxhID0gdGhpcy5mb3JtdWxhICsgdGhpcy5mb3JtdWxpemUodmFsdWUpOwogICAgICB9CiAgICB9LAoKICAgIC8qCiAgICAgKiBGVU5DVElPTjogY2xlYXIoKQogICAgICogUEFSQU1FVEVSUzogTk9ORQogICAgICogRlVOQ1RJT05BTElUWTogY2xlYXJzIHRoZSBjYWxjdWxhdG9yIHRvIGRlZmF1bHQgc2V0dGluZ3MKICAgICAqLwogICAgY2xlYXI6IGZ1bmN0aW9uIGNsZWFyKCkgewogICAgICB0aGlzLmRpc3BsYXlUZXh0ID0gIjAiOwogICAgICB0aGlzLmZvcm11bGEgPSAiIjsKICAgICAgdGhpcy5jb250YWluc09wID0gZmFsc2U7CiAgICB9LAoKICAgIC8qCiAgICAgKiBGVU5DVElPTjogYmFja3NwYWNlKCkKICAgICAqIFBBUkFNRVRFUlM6IG5vbmUKICAgICAqIEZVTkNUSU9OQUxJVFk6IGJhY2tzcGFjZSgpIHVzZXMgc2xpY2UoKSB0byBjdXQgdGhlIGxhc3QgY2hhcmFjdGVyIG9mZiBmcm9tCiAgICAgKiB0aGUgc3RyaW5nLiBJdCB1c2VzIHRvU3RyaW5nKCkgdG8gZW5zdXJlIHRoYXQgdGhpcy5mb3JtdWxhIGlzIGEgc3RyaW5nCiAgICAgKiAob3RoZXJ3aXNlIHRoaXMgZnVuY3Rpb24gd291bGQgbm90IHdvcmsgd2hlbiBkZWxldGluZyB0aGUgbGFzdCBjaGFyYWN0ZXIKICAgICAqIGZyb20gYSByZXN1bHQpLgogICAgICovCiAgICBiYWNrc3BhY2U6IGZ1bmN0aW9uIGJhY2tzcGFjZSgpIHsKICAgICAgdGhpcy5kaXNwbGF5VGV4dCA9IHRoaXMuZGlzcGxheVRleHQuc2xpY2UoMCwgdGhpcy5kaXNwbGF5VGV4dC5sZW5ndGggLSAxKTsKICAgICAgdGhpcy5mb3JtdWxhID0gdGhpcy5mb3JtdWxhLnNsaWNlKDAsIHRoaXMuZm9ybXVsYS5sZW5ndGggLSAxKTsKICAgIH0sCgogICAgLyoKICAgICAqIEZVTkNUSU9OOiBwdXNoKCkKICAgICAqIFBBUkFNRVRFUlM6IHRleHQ6IHRvIHJlcGxhY2UgdGhpcy5sYXN0Q2FsYwogICAgICogRlVOQ1RJT05BTElUWTogY2hhbmdlcyB0aGlyZENhbGMgdG8gdGhlIHZhbHVlIG9mIHNlY29uZENhbGMKICAgICAqIGNoYW5nZXMgc2Vjb25kQ2FsYyB0byB0aGUgdmFsdWUgb2YgdGhpcmRDYWxjCiAgICAgKiBhbmQgY2hhbmdlcyB0aGUgdmFsdWUgb2YgdGhpcy5sYXN0Q2FsYyB0byB0ZXh0IHBhcmFtZXRlcgogICAgICovCiAgICBwdXNoOiBmdW5jdGlvbiBwdXNoKHRleHQpIHsKICAgICAgdGhpcy50aGlyZENhbGMgPSB0aGlzLnNlY29uZENhbGM7CiAgICAgIHRoaXMuc2Vjb25kQ2FsYyA9IHRoaXMubGFzdENhbGM7CiAgICAgIHRoaXMubGFzdENhbGMgPSB0ZXh0OwogICAgfSwKCiAgICAvKgogICAgICAqIEZVTkNUSU9OOiB0aGVtZUNoYW5nZSgpCiAgICAgICogUEFSQU1FVEVSUzogdGhlbWU6IHRoZSB0aGVtZSB0byBiZSBjaGFuZ2VkIHRvCiAgICAgICogRlVOQ1RJT05BTElUWTogY2hhbmdlcyB0aGUgdGhlbWUgb2YgdGhlIGNhbGN1bGF0b3IgZGVwZW5kaW5nIG9uCiAgICAgICogdGhlbWUgdmFyaWFibGUKICAgICAgKi8KICAgIHRoZW1lQ2hhbmdlOiBmdW5jdGlvbiB0aGVtZUNoYW5nZSh0aGVtZSkgewogICAgICBpZiAodGhlbWUgPT09ICJncmVlbiIpIHsKICAgICAgICB0aGlzLmdyZWVuID0gdHJ1ZTsKICAgICAgICB0aGlzLmJsdWUgPSBmYWxzZTsKICAgICAgICB0aGlzLnB1cnBsZSA9IGZhbHNlOwogICAgICB9CgogICAgICBpZiAodGhlbWUgPT09ICJibHVlIikgewogICAgICAgIHRoaXMuZ3JlZW4gPSBmYWxzZTsKICAgICAgICB0aGlzLmJsdWUgPSB0cnVlOwogICAgICAgIHRoaXMucHVycGxlID0gZmFsc2U7CiAgICAgIH0KCiAgICAgIGlmICh0aGVtZSA9PT0gInB1cnBsZSIpIHsKICAgICAgICB0aGlzLmdyZWVuID0gZmFsc2U7CiAgICAgICAgdGhpcy5ibHVlID0gZmFsc2U7CiAgICAgICAgdGhpcy5wdXJwbGUgPSB0cnVlOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AAEA;AACAA,sBADA;AAEAC;AACAC,gCADA;AAEAC,sCAFA;AAGAC;AAHA,GAFA;AASAC,MATA,kBASA;AACA;AACAC,sBADA;AAEAC,kBAFA;AAGAC,oBAHA;AAIAC,mBAJA;AAKAC,iBALA;AAMAC,qBANA;AAOAC,kBAPA;AAQAC,kBARA;AASAC,iBATA;AAUAC;AAVA;AAYA,GAtBA;AAwBAC;AACA;AACA;AACA;AACA;AACA;AACAC,YANA,sBAMA;AACA;AACA;AACA;AACA;AACA;AACAC;;AACA;AACA;AACA,SAFA,MAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAdA,CAcA;AACA;AACA;AACA,KAxBA;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACAC,QA/BA,gBA+BAC,KA/BA,EA+BA;AACA;AACA;AACA,OAFA,MAEA;AACA,KAnCA;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,aA9CA,qBA8CAD,KA9CA,EA8CA;AACA;AACA;AACA;AACA,yCACA;AACA,KApDA;;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,UA7DA,kBA6DAF,KA7DA,EA6DA;AACAG;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA,SAFA,CAGA;AAHA,aAIA;AACA;AACAL;AACA;AACA;AACA;AACA;AACA,OAnBA,CAoBA;;;AACA,uEArBA,CAuBA;;AACA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA;AAEA,KA7FA;;AA+FA;AACA;AACA;AACA;AACA;AACAM,SApGA,mBAoGA;AACA;AACA;AACA;AACA,KAxGA;;AA0GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,aAlHA,uBAkHA;AACA;AACA;AACA,KArHA;;AAuHA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,QA9HA,gBA8HAC,IA9HA,EA8HA;AACA;AACA;AACA;AACA,KAlIA;;AAmIA;AACA;AACA;AACA;AACA;AACA;AACAC,eAzIA,uBAyIAjB,KAzIA,EAyIA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAvJA;AAxBA","names":["name","components","HamburgerMenu","CalculatorOutput","CalculatorButtons","data","displayText","lastCalc","secondCalc","thirdCalc","formula","theme","purple","green","blue","containsOp","methods","evaluate","result","isOp","value","formulize","append","console","clear","backspace","push","text","themeChange"],"sourceRoot":"src/views","sources":["Calculator.vue"],"sourcesContent":["<template>\n  <div v-bind:class=\"{ 'purple': this.purple, 'green': this.green, 'blue': this.blue }\">\n    <div class=\"\">\n    <HamburgerMenu\n    v-bind:lastCalc=\"this.lastCalc\"\n    v-bind:secondCalc=\"this.secondCalc\"\n    v-bind:thirdCalc=\"this.thirdCalc\"\n    v-on:change=\"themeChange($event)\"\n    v-bind:purple=\"this.purple\"\n    v-bind:green=\"this.green\"\n    v-bind:blue=\"this.blue\"/>\n    <div>\n    <CalculatorOutput\n    v-bind:displayText=\"this.displayText\"\n    v-bind:purple=\"this.purple\"\n    v-bind:green=\"this.green\"\n    v-bind:blue=\"this.blue\"/>\n    <CalculatorButtons\n    v-on:numPress=\"append($event)\"\n    v-on:operation=\"append($event)\"\n    v-on:clear=\"clear()\"\n    v-on:eval=\"evaluate()\"\n    v-bind:purple=\"this.purple\"\n    v-bind:green=\"this.green\"\n    v-bind:blue=\"this.blue\"/>\n    </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport HamburgerMenu from '@/components/HamburgerMenu.vue'\nimport CalculatorOutput from '@/components/CalculatorOutput.vue'\nimport CalculatorButtons from '@/components/CalculatorButtons.vue'\n\nexport default {\n  name: 'Calculator-r',\n  components: {\n    HamburgerMenu,\n    CalculatorOutput,\n    CalculatorButtons\n  },\n\n\n  data () {\n    return {\n      displayText: \"0\",\n      lastCalc: \"\",\n      secondCalc: \"\",\n      thirdCalc: \"\",\n      formula: \"\",\n      theme: \"purple\",\n      purple: true,\n      green: false,\n      blue: false,\n      containsOp: false,\n    }\n  },\n\n  methods: {\n    /*\n     * FUNCTION: evaluate()\n     * PARAMETERS: none\n     * FUNCTIONALITY: evaluate() was already written by instructors.\n     */\n    evaluate () {\n      try {\n        /* WARNING! Never use eval in production code. */\n        // eslint-disable-next-line no-eval\n        let result = eval(this.formula)\n        this.formulaAlert = false\n        result = \"\"+Math.round(result*100)/100\n        if (result===\"NaN\") {\n          this.clear()\n        } else {\n          this.push(this.displayText+\"= \"+result)\n          this.displayText = \"\"+result\n          this.formula = \"\"+result\n          this.containsOp= false\n        }\n      } catch (exception) {\n        this.clear()\n      }\n    },\n    /*\n     * FUNCTION: isOp()\n     * PARAMETERS: value: any string value\n     * FUNCTIONALITY: checks to see if value is \"+\", \"-\", \"×\", \"÷\", \"/\" or \"*\"\n     * If so returns true, else false\n     */\n    isOp (value) {\n      if (value === \"÷\" || value===\"×\" || value===\"+\" || value=== \"-\" || value===\"/\" || value===\"*\") {\n        return true\n      } else return false\n    },\n\n    /*\n     * FUNCTION: formulize()\n     * PARAMETERS: value: \"+\", \"-\", \"×\", \"÷\" or a number string\n     * FUNCTIONALITY:\n     * \"+\" returns \"+\"\n     * \"-\" returns \"-\"\n     * \"×\" returns \"*\"\n     * \"÷\" returns \"/\"\n     */\n    formulize (value) {\n      if (value===\"+\") return \"+\"\n      if (value===\"-\") return \"-\"\n      if (value===\"×\") return \"*\"\n      if (value===\"÷\") return \"/\"\n      else return value\n    },\n\n    /*\n     * FUNCTION: append()\n     * PARAMETERS: value: Value to be appended to end of string.\n     * FUNCTIONALITY: append() first checks to see if this.formula has been set.\n     * If not, then it just replaces the value. If it has been set, it adds the\n     * user input string (the button pressed) to the end of this.formula.\n     */\n    append (value) {\n      console.log(\"LENGTH: \"+this.displayText.length)\n      if (this.displayText.length >5){\n        return\n      }\n      if (this.containsOp && this.isOp(value)) {\n        // If value is op and last char is op replace last char\n        let last = this.formula.charAt(this.formula.length -1)\n        if (this.isOp(last)){\n          this.backspace()\n        }\n        // If in format (num op num) evaluate and update display\n        else {\n          let result = eval(this.formula)\n          result = Math.round(result*100)/100\n          this.push(this.displayText+\"= \"+result)\n          this.displayText = \"\"+result\n          this.formula= \"\"+result\n        }\n      }\n      //if there's not already an op and value is an op start contains op to true\n      if (!this.containsOp && this.isOp(value)) this.containsOp=true\n\n      // if it's displaying 0 replace it with a number\n      if (this.displayText===\"0\" && !this.isOp(value)) {\n        this.displayText=value\n        this.formula=value\n      } else {\n        this.displayText=this.displayText+value\n        this.formula=this.formula+this.formulize(value)\n      }\n\n    },\n\n    /*\n     * FUNCTION: clear()\n     * PARAMETERS: NONE\n     * FUNCTIONALITY: clears the calculator to default settings\n     */\n    clear () {\n      this.displayText = \"0\"\n      this.formula = \"\"\n      this.containsOp = false\n    },\n\n    /*\n     * FUNCTION: backspace()\n     * PARAMETERS: none\n     * FUNCTIONALITY: backspace() uses slice() to cut the last character off from\n     * the string. It uses toString() to ensure that this.formula is a string\n     * (otherwise this function would not work when deleting the last character\n     * from a result).\n     */\n    backspace () {\n      this.displayText= this.displayText.slice(0, (this.displayText.length -1))\n      this.formula=this.formula.slice(0, (this.formula.length -1))\n    },\n\n    /*\n     * FUNCTION: push()\n     * PARAMETERS: text: to replace this.lastCalc\n     * FUNCTIONALITY: changes thirdCalc to the value of secondCalc\n     * changes secondCalc to the value of thirdCalc\n     * and changes the value of this.lastCalc to text parameter\n     */\n    push (text) {\n      this.thirdCalc = this.secondCalc\n      this.secondCalc = this.lastCalc\n      this.lastCalc = text\n    },\n    /*\n      * FUNCTION: themeChange()\n      * PARAMETERS: theme: the theme to be changed to\n      * FUNCTIONALITY: changes the theme of the calculator depending on\n      * theme variable\n      */\n      themeChange (theme) {\n        if (theme===\"green\") {\n          this.green=true\n          this.blue = false\n          this.purple= false\n        } if (theme===\"blue\") {\n          this.green=false\n          this.blue = true\n          this.purple= false\n        } if (theme===\"purple\") {\n          this.green=false\n          this.blue = false\n          this.purple= true\n        }\n    }\n  }\n}\n</script>\n\n<style>\n.purple {\n  background-color: #43326e;\n}\n\n.green {\n  background-color: #538103;\n}\n\n.blue {\n  background-color: #1A7B93;\n}\n\n.landscapemain {\n  display: flex;\n  flex-direction: row;\n  margin-left:10px;\n}\n\n</style>\n"]}]}
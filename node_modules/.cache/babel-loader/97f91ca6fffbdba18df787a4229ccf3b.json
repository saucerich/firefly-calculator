{"remainingRequest":"/workspaces/firefly-calc/node_modules/babel-loader/lib/index.js!/workspaces/firefly-calc/node_modules/cache-loader/dist/cjs.js??ref--1-0!/workspaces/firefly-calc/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspaces/firefly-calc/src/views/Calculator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspaces/firefly-calc/src/views/Calculator.vue","mtime":1646931915375},{"path":"/workspaces/firefly-calc/babel.config.js","mtime":1646931915352},{"path":"/workspaces/firefly-calc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/workspaces/firefly-calc/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/workspaces/firefly-calc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/workspaces/firefly-calc/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AAEA;AACAA,oBADA;AAEAC;AACAC,gCADA;AAEAC,sCAFA;AAGAC;AAHA,GAFA;AASAC,MATA,kBASA;AACA;AACAC,sBADA;AAEAC,kBAFA;AAGAC,oBAHA;AAIAC,mBAJA;AAKAC,iBALA;AAMAC,qBANA;AAOAC,kBAPA;AAQAC,kBARA;AASAC,iBATA;AAUAC;AAVA;AAYA,GAtBA;AAwBAC;AACA;AACA;AACA;AACA;AACA;AACAC,YANA,sBAMA;AACAC;;AACA;AACA;AACA;AACA;AACA;AACAC;;AACA;AACA;AACA,SAFA,MAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAdA,CAcA;AACA;AACA;;AACAD;AACAA;AACAA;AACA,KA5BA;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACAE,QAnCA,gBAmCAC,KAnCA,EAmCA;AACA;AACA;AACA,OAFA,MAEA;AACA,KAvCA;;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,aAlDA,qBAkDAD,KAlDA,EAkDA;AACA;AACA;AACA;AACA,yCACA;AACA,KAxDA;;AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,UAjEA,kBAiEAF,KAjEA,EAiEA;AACAH;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA,SAFA,CAGA;AAHA,aAIA;AACA;AACAC;AACA;AACA;AACA;AACA;AACA,OAnBA,CAoBA;;;AACA,uEArBA,CAuBA;;AACA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA;;AACAD;AACAA;AACAA;AAEA,KApGA;;AAsGA;AACA;AACA;AACA;AACA;AACAM,SA3GA,mBA2GA;AACA;AACA;AACA;AACAN;AACA,KAhHA;;AAkHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAO,aA1HA,uBA0HA;AACA;AACA;AACA,KA7HA;;AA+HA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,QAtIA,gBAsIAC,IAtIA,EAsIA;AACA;AACA;AACA;AACA,KA1IA;;AA2IA;AACA;AACA;AACA;AACA;AACA;AACAC,eAjJA,uBAiJAjB,KAjJA,EAiJA;AACA;AACAO;AACA;AACA;AACA;AACA;;AAAA;AACAA;AACA;AACA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAjKA;AAxBA","names":["name","components","HamburgerMenu","CalculatorOutput","CalculatorButtons","data","displayText","lastCalc","secondCalc","thirdCalc","formula","theme","purple","green","blue","containsOp","methods","evaluate","console","result","isOp","value","formulize","append","clear","backspace","push","text","themeChange"],"sourceRoot":"src/views","sources":["Calculator.vue"],"sourcesContent":["<template>\n  <div v-bind:class=\"{ 'purple': this.purple, 'green': this.green, 'blue': this.blue }\">\n    <div class=\"landscapemain\">\n    <HamburgerMenu\n    v-bind:lastCalc=\"this.lastCalc\"\n    v-bind:secondCalc=\"this.secondCalc\"\n    v-bind:thirdCalc=\"this.thirdCalc\"\n    v-on:change=\"themeChange($event)\"\n    v-bind:purple=\"this.purple\"\n    v-bind:green=\"this.green\"\n    v-bind:blue=\"this.blue\"/>\n    <div>\n    <CalculatorOutput\n    v-bind:displayText=\"this.displayText\"\n    v-bind:purple=\"this.purple\"\n    v-bind:green=\"this.green\"\n    v-bind:blue=\"this.blue\"/>\n    <CalculatorButtons\n    v-on:numPress=\"append($event)\"\n    v-on:operation=\"append($event)\"\n    v-on:clear=\"clear()\"\n    v-on:eval=\"evaluate()\"\n    v-bind:purple=\"this.purple\"\n    v-bind:green=\"this.green\"\n    v-bind:blue=\"this.blue\"/>\n    </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport HamburgerMenu from '@/components/HamburgerMenu.vue'\nimport CalculatorOutput from '@/components/CalculatorOutput.vue'\nimport CalculatorButtons from '@/components/CalculatorButtons.vue'\n\nexport default {\n  name: 'Calculator',\n  components: {\n    HamburgerMenu,\n    CalculatorOutput,\n    CalculatorButtons\n  },\n\n\n  data () {\n    return {\n      displayText: \"0\",\n      lastCalc: \"\",\n      secondCalc: \"\",\n      thirdCalc: \"\",\n      formula: \"\",\n      theme: \"purple\",\n      purple: true,\n      green: false,\n      blue: false,\n      containsOp: false,\n    }\n  },\n\n  methods: {\n    /*\n     * FUNCTION: evaluate()\n     * PARAMETERS: none\n     * FUNCTIONALITY: evaluate() was already written by instructors.\n     */\n    evaluate () {\n      console.log(\"--EVAULATING--\")\n      try {\n        /* WARNING! Never use eval in production code. */\n        // eslint-disable-next-line no-eval\n        let result = eval(this.formula)\n        this.formulaAlert = false\n        result = \"\"+Math.round(result*100)/100\n        if (result===\"NaN\") {\n          this.clear()\n        } else {\n          this.push(this.displayText+\"= \"+result)\n          this.displayText = \"\"+result\n          this.formula = \"\"+result\n          this.containsOp= false\n        }\n      } catch (exception) {\n        this.clear()\n      }\n      console.log(\"containsOp (eval): \"+this.containsOp)\n      console.log(\"display (eval): \"+this.displayText+\" \"+typeof this.displayText)\n      console.log(\"formula (eval): \"+this.formula+\" \"+typeof this.formula)\n    },\n    /*\n     * FUNCTION: isOp()\n     * PARAMETERS: value: any string value\n     * FUNCTIONALITY: checks to see if value is \"+\", \"-\", \"×\", \"÷\", \"/\" or \"*\"\n     * If so returns true, else false\n     */\n    isOp (value) {\n      if (value === \"÷\" || value===\"×\" || value===\"+\" || value=== \"-\" || value===\"/\" || value===\"*\") {\n        return true\n      } else return false\n    },\n\n    /*\n     * FUNCTION: formulize()\n     * PARAMETERS: value: \"+\", \"-\", \"×\", \"÷\" or a number string\n     * FUNCTIONALITY:\n     * \"+\" returns \"+\"\n     * \"-\" returns \"-\"\n     * \"×\" returns \"*\"\n     * \"÷\" returns \"/\"\n     */\n    formulize (value) {\n      if (value===\"+\") return \"+\"\n      if (value===\"-\") return \"-\"\n      if (value===\"×\") return \"*\"\n      if (value===\"÷\") return \"/\"\n      else return value\n    },\n\n    /*\n     * FUNCTION: append()\n     * PARAMETERS: value: Value to be appended to end of string.\n     * FUNCTIONALITY: append() first checks to see if this.formula has been set.\n     * If not, then it just replaces the value. If it has been set, it adds the\n     * user input string (the button pressed) to the end of this.formula.\n     */\n    append (value) {\n      console.log(\"LENGTH: \"+this.displayText.length)\n      if (this.displayText.length>7){\n        return\n      }\n      if (this.containsOp && this.isOp(value)) {\n        // If value is op and last char is op replace last char\n        let last = this.formula.charAt(this.formula.length -1)\n        if (this.isOp(last)){\n          this.backspace()\n        }\n        // If in format (num op num) evaluate and update display\n        else {\n          let result = eval(this.formula)\n          result = Math.round(result*100)/100\n          this.push(this.displayText+\"= \"+result)\n          this.displayText = \"\"+result\n          this.formula= \"\"+result\n        }\n      }\n      //if there's not already an op and value is an op start contains op to true\n      if (!this.containsOp && this.isOp(value)) this.containsOp=true\n\n      // if it's displaying 0 replace it with a number\n      if (this.displayText===\"0\" && !this.isOp(value)) {\n        this.displayText=value\n        this.formula=value\n      } else {\n        this.displayText=this.displayText+value\n        this.formula=this.formula+this.formulize(value)\n      }\n      console.log(\"display: \"+this.displayText+\" \"+typeof this.displayText)\n      console.log(\"formula: \"+this.formula+\" \"+typeof this.formula)\n      console.log(\"containsOp: \"+this.containsOp)\n\n    },\n\n    /*\n     * FUNCTION: clear()\n     * PARAMETERS: NONE\n     * FUNCTIONALITY: clears the calculator to default settings\n     */\n    clear () {\n      this.displayText = \"0\"\n      this.formula = \"\"\n      this.containsOp = false\n      console.log(\"---CLEAR---\")\n    },\n\n    /*\n     * FUNCTION: backspace()\n     * PARAMETERS: none\n     * FUNCTIONALITY: backspace() uses slice() to cut the last character off from\n     * the string. It uses toString() to ensure that this.formula is a string\n     * (otherwise this function would not work when deleting the last character\n     * from a result).\n     */\n    backspace () {\n      this.displayText= this.displayText.slice(0, (this.displayText.length -1))\n      this.formula=this.formula.slice(0, (this.formula.length -1))\n    },\n\n    /*\n     * FUNCTION: push()\n     * PARAMETERS: text: to replace this.lastCalc\n     * FUNCTIONALITY: changes thirdCalc to the value of secondCalc\n     * changes secondCalc to the value of thirdCalc\n     * and changes the value of this.lastCalc to text parameter\n     */\n    push (text) {\n      this.thirdCalc = this.secondCalc\n      this.secondCalc = this.lastCalc\n      this.lastCalc = text\n    },\n    /*\n      * FUNCTION: themeChange()\n      * PARAMETERS: theme: the theme to be changed to\n      * FUNCTIONALITY: changes the theme of the calculator depending on\n      * theme variable\n      */\n      themeChange (theme) {\n        if (theme===\"green\") {\n          console.log(theme)\n          this.green=true\n          this.blue = false\n          this.purple= false\n        } if (theme===\"blue\") {\n          console.log(theme)\n          this.green=false\n          this.blue = true\n          this.purple= false\n        } if (theme===\"purple\") {\n          this.green=false\n          this.blue = false\n          this.purple= true\n        }\n    }\n  }\n}\n</script>\n\n<style>\n.purple {\n  background-color: #43326e;\n}\n\n.green {\n  background-color: #538103;\n}\n\n.blue {\n  background-color: #1A7B93;\n}\n\n.landscapemain {\n  display: flex;\n  flex-direction: row;\n  margin-left:10px;\n}\n\n</style>\n"]}]}